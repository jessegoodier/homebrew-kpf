name: Manual Formula Update

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'KPF version to update to'
        required: true
        type: string

jobs:
  manual-update:
    runs-on: macos-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install homebrew-pypi-poet
        run: |
          python -m pip install --upgrade pip
          pip install homebrew-pypi-poet

      - name: Generate formula
        run: |
          VERSION="${{ github.event.inputs.version }}"
          
          # Create temporary environment
          python -m venv temp_env
          source temp_env/bin/activate
          
          # Install the specific version
          pip install kpf==$VERSION
          
          # Generate formula
          poet -f kpf > temp_kpf.rb
          
          echo "Generated formula for kpf $VERSION:"
          cat temp_kpf.rb

      - name: Update formula with metadata
        run: |
          VERSION="${{ github.event.inputs.version }}"
          
          # Create the final formula with proper metadata
          cat > Formula/kpf.rb << 'EOF'
          class Kpf < Formula
            include Language::Python::Virtualenv

            desc "A terminal utility to run kubectl port-forward and automatically restart it when endpoint changes are detected"
            homepage "https://github.com/jessegoodier/kpf"
            license "MIT"

            depends_on "python@3.12"

          EOF
          
          # Extract URL, SHA256, and resources from generated formula
          source temp_env/bin/activate
          
          # Get package info
          python3 << 'PYTHON_EOF'
          import json
          import requests
          
          version = "${{ github.event.inputs.version }}"
          response = requests.get(f'https://pypi.org/pypi/kpf/{version}/json')
          data = response.json()
          
          # Find source distribution
          for url_info in data['urls']:
              if url_info['packagetype'] == 'sdist':
                  print(f'  url "{url_info["url"]}"')
                  print(f'  sha256 "{url_info["digests"]["sha256"]}"')
                  break
          PYTHON_EOF
          
          # Add URL and SHA256 to formula
          python3 << 'PYTHON_EOF'
          import json
          import requests
          
          version = "${{ github.event.inputs.version }}"
          response = requests.get(f'https://pypi.org/pypi/kpf/{version}/json')
          data = response.json()
          
          # Find source distribution and append to formula
          for url_info in data['urls']:
              if url_info['packagetype'] == 'sdist':
                  with open('Formula/kpf.rb', 'a') as f:
                      f.write(f'  url "{url_info["url"]}"\n')
                      f.write(f'  sha256 "{url_info["digests"]["sha256"]}"\n\n')
                  break
          PYTHON_EOF
          
          # Extract and add resources from poet-generated formula
          grep -A 1000 "resource " temp_kpf.rb | grep -B 1000 "def install" | head -n -1 >> Formula/kpf.rb
          
          # Add the install and test methods
          cat >> Formula/kpf.rb << 'EOF'

            def install
              virtualenv_install_with_resources
            end

            test do
              # Test that the kpf command exists and shows help
              assert_match "A better Kubectl Port-Forward", shell_output("#{bin}/kpf --help")
              
              # Test version output
              version_output = shell_output("#{bin}/kpf --version")
              assert_match "kpf #{version}", version_output
            end
          end
          EOF
          
          echo "Final formula:"
          cat Formula/kpf.rb

      - name: Cleanup
        run: |
          rm -f temp_kpf.rb
          rm -rf temp_env

      - name: Test formula syntax
        run: |
          # Basic syntax check
          ruby -c Formula/kpf.rb

      - name: Commit and push
        run: |
          VERSION="${{ github.event.inputs.version }}"
          
          git config --local user.name "github-actions[bot]"
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          
          git add Formula/kpf.rb
          git commit -m "Manually update kpf to version $VERSION

          ðŸ”§ Manual update via GitHub Actions workflow
          
          Co-authored-by: ${{ github.actor }} <${{ github.actor }}@users.noreply.github.com>"
          
          git push